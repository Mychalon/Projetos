/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package telas;

import model.Produto;
import java.util.ArrayList;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;
/**
 *
 * @author Mycha
 */
public class Vendaprodutos extends javax.swing.JInternalFrame {

    public Vendaprodutos(ArrayList<Produto> listaProdutos) {
    super(); // Chama o construtor da superclasse
    initComponents(); // Inicializa os componentes da interface gráfica
    this.listaProdutos = listaProdutos; // Inicializa a lista de produtos

    // Configura o botão "Consultar"
    consultarProduto.addActionListener(e -> {
        try {
            consprodutos consulta = new consprodutos(listaProdutos); // Cria a tela de consulta
            JDesktopPane desktopPane = getDesktopPane(); // Obtém o JDesktopPane atual
            desktopPane.add(consulta); // Adiciona a tela ao JDesktopPane
            consulta.setVisible(true); // Torna a tela visível
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Erro ao abrir a tela de consulta: " + ex.getMessage());
        }
    });
    // Adicionar ActionListeners aos campos
    txtCodigo.addActionListener(e -> consultarProdutoPorCodigo());
    txtQuantidade.addActionListener(e -> adicionarProdutoAVenda());
}
    
       private ArrayList<String> descricaoItens = new ArrayList<>(); // Lista de descrições dos itens
       
    private int valorTotalVenda;
    private ArrayList<Produto> listaProdutos;

private void atualizarDescricao() {
    StringBuilder descricao = new StringBuilder();
    for (String item : descricaoItens) {
        descricao.append(item).append("\n");
    }
    // Atualiza o campo de texto
    descricaoItensTextField.setText(descricao.toString());
}
private void adicionarProdutoAVenda() {
     try {
        String codigo = txtCodigo.getText();
        int quantidade = Integer.parseInt(txtQuantidade.getText());
        String precoUnitarioStr = precoUnidade.getText().replace(",", "."); // Substitui vírgula por ponto
        double precoUnitario = Double.parseDouble(precoUnitarioStr); // Converte para double

        Produto produto = buscarProdutoPorCodigo(codigo);
        if (produto != null) {
            // Calcula o valor total do item
            double valorTotalItem = quantidade * precoUnitario; // Já é double

            // Adiciona o item à descrição
            String descricaoItem = produto.getNome() + " - Quantidade: " + quantidade + " - Valor: R$ " + String.format("%.2f", valorTotalItem);
            descricaoItens.add(descricaoItem);
            
            
            // Atualiza a descrição na interface
            atualizarDescricao();

            // Atualiza o valor total da venda
            valorTotalVenda += valorTotalItem;
            valorTotal.setText(String.format("R$ %.2f", valorTotalVenda));

            // Atualiza a quantidade de itens
            quantidadedeItens.setText(String.valueOf(descricaoItens.size()));

            // Limpa os campos para o próximo produto
            txtCodigo.setText("");
            txtnomeProduto.setText("");
            precoUnidade.setText("");
            txtQuantidade.setText("");
            txtCodigo.requestFocus(); // Volta o foco para o campo de código
        } else {
            JOptionPane.showMessageDialog(this, "Produto não encontrado!");
        }
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Quantidade ou preço inválido!");
    }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        quantidadedeItens = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        valorTotal = new javax.swing.JTextField();
        consultarProduto = new javax.swing.JButton();
        cancelarProduto = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtnomeProduto = new javax.swing.JTextField();
        valorUnitario = new javax.swing.JTextField();
        txtCodigo = new javax.swing.JTextField();
        txtQuantidade = new javax.swing.JTextField();
        precoUnidade = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        descricaoItensTextField = new javax.swing.JTextField();
        Voltar = new javax.swing.JButton();
        vendaFeita = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setClosable(true);
        setTitle("Vendas");

        jPanel2.setBackground(new java.awt.Color(109, 109, 109));

        jLabel5.setBackground(new java.awt.Color(90, 90, 90));
        jLabel5.setText("Quant. Itens");

        jLabel7.setText("Valor Total (R$)");

        valorTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valorTotalActionPerformed(evt);
            }
        });

        consultarProduto.setText("Consultar");
        consultarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultarProdutoActionPerformed(evt);
            }
        });

        cancelarProduto.setText("Cancelar Prod.");
        cancelarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarProdutoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(consultarProduto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                        .addComponent(cancelarProduto))
                    .addComponent(jLabel7)
                    .addComponent(jLabel5)
                    .addComponent(quantidadedeItens)
                    .addComponent(valorTotal))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(quantidadedeItens, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(valorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(consultarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(255, 175, 41));

        jLabel1.setText("código");

        jLabel2.setText("Quantidade");

        jLabel3.setText("Preço Unitario");

        jLabel4.setText("Valor Total");

        valorUnitario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valorUnitarioActionPerformed(evt);
            }
        });

        txtQuantidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQuantidadeActionPerformed(evt);
            }
        });

        precoUnidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                precoUnidadeActionPerformed(evt);
            }
        });

        jLabel6.setText("Nome do Produto");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(65, 65, 65)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(91, 91, 91)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(precoUnidade, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)))
                    .addComponent(jLabel6)
                    .addComponent(txtnomeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 614, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(valorUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(precoUnidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtnomeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(valorUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Descrição"));

        descricaoItensTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descricaoItensTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(descricaoItensTextField)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(descricaoItensTextField)
                .addContainerGap())
        );

        Voltar.setText("Voltar");
        Voltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VoltarActionPerformed(evt);
            }
        });

        vendaFeita.setText("Finalizar");
        vendaFeita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vendaFeitaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Voltar)
                                .addGap(31, 31, 31)
                                .addComponent(vendaFeita)
                                .addGap(16, 16, 16))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Voltar)
                            .addComponent(vendaFeita)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 9, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void precoUnidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_precoUnidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_precoUnidadeActionPerformed

    private void valorTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valorTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_valorTotalActionPerformed

    private void cancelarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarProdutoActionPerformed
        if (!descricaoItens.isEmpty()) {
        // Remove o último item da descrição
        descricaoItens.remove(descricaoItens.size() - 1);

        // Atualiza a descrição na interface
        atualizarDescricao();

        // Atualiza a quantidade de itens
        quantidadedeItens.setText(String.valueOf(descricaoItens.size()));

        // Recalcula o valor total da venda
        valorTotalVenda = 0;
        for (String item : descricaoItens) {
            String[] partes = item.split(" - Valor: R\\$ ");
            String valorStr = partes[1].replace(",", "."); // Substitui vírgula por ponto
            valorTotalVenda += Double.parseDouble(valorStr); // Converte para double
        }
        valorTotal.setText(String.format("R$ %.2f", valorTotalVenda));
    } else {
        JOptionPane.showMessageDialog(this, "Nenhum item para cancelar!");
    }
    }//GEN-LAST:event_cancelarProdutoActionPerformed

    private void VoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VoltarActionPerformed

        setVisible(false);
    }//GEN-LAST:event_VoltarActionPerformed

    private void consultarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultarProdutoActionPerformed
    consprodutos consulta = new consprodutos(listaProdutos); // Cria a tela de consulta
    consulta.setVisible(true); // Torna a tela visível
    }//GEN-LAST:event_consultarProdutoActionPerformed

    private void vendaFeitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vendaFeitaActionPerformed

    // Finalizar a venda
    if (descricaoItens.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Nenhum produto selecionado para venda!");
    } else {
        // Exibir resumo da venda
        StringBuilder resumo = new StringBuilder("Resumo da Venda:\n");
        for (String item : descricaoItens) {
            resumo.append(item).append("\n");
        }
        resumo.append("Valor Total da Venda: R$ ").append(String.format("%.2f", (double) valorTotalVenda));

        // Exibir o resumo em uma mensagem
        JOptionPane.showMessageDialog(this, resumo.toString());

        // Simular a impressão do resumo
        imprimirResumoVenda(resumo.toString());

        // Limpar a lista de produtos da venda
        descricaoItens.clear();
        valorTotalVenda = 0;
        quantidadedeItens.setText("0");
        valorTotal.setText("R$ 0.00");
        descricaoItensTextField.setText(""); // Limpa o campo de descrição
    }
}
private void imprimirResumoVenda(String resumo) {
    // Simulação de impressão (pode ser substituída por uma impressão real)
    System.out.println("=== Impressão do Resumo da Venda ===");
    System.out.println(resumo);
    System.out.println("===================================");
    }//GEN-LAST:event_vendaFeitaActionPerformed

    private void valorUnitarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valorUnitarioActionPerformed
      
    }//GEN-LAST:event_valorUnitarioActionPerformed

    private void descricaoItensTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descricaoItensTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_descricaoItensTextFieldActionPerformed

    private void txtQuantidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQuantidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQuantidadeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Voltar;
    private javax.swing.JButton cancelarProduto;
    private javax.swing.JButton consultarProduto;
    private javax.swing.JTextField descricaoItensTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField precoUnidade;
    private javax.swing.JTextField quantidadedeItens;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtQuantidade;
    private javax.swing.JTextField txtnomeProduto;
    private javax.swing.JTextField valorTotal;
    private javax.swing.JTextField valorUnitario;
    private javax.swing.JButton vendaFeita;
    // End of variables declaration//GEN-END:variables

   
    private double calcularValorTotalProduto(int quantidade, double precoUnitario) {
    return quantidade * precoUnitario; // Retorna o valor total do produto
 }

    private Produto buscarProdutoPorCodigo(String codigo) {
     for (Produto produto : listaProdutos) {
        if (produto.getCodigo().equals(codigo)) {
            return produto;
        }
    }
    return null; // Retorna null se o produto não for encontrado    
    
    }

    private void consultarProdutoPorCodigo() {
    String codigo = txtCodigo.getText().trim(); // Obtém o código digitado

    if (!codigo.isEmpty()) {
        Produto produto = buscarProdutoPorCodigo(codigo); // Busca o produto na lista

        if (produto != null) {
            // Preenche os campos com as informações do produto
            txtnomeProduto.setText(produto.getNome());
            precoUnidade.setText(String.valueOf(produto.getPreco()));
            txtQuantidade.requestFocus(); // Move o foco para o campo de quantidade
        } else {
            JOptionPane.showMessageDialog(this, "Produto não encontrado!");
            txtCodigo.setText(""); // Limpa o campo de código
            txtCodigo.requestFocus(); // Volta o foco para o campo de código
        }
    }    
    }

   

}
