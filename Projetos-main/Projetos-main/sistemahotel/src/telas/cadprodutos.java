/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package telas;

import dao.ProdutoDAO;
import model.Produto;
import java.util.ArrayList;
import javax.swing.JOptionPane;
/**
 *
 * @author HOTEL FENIX
 */
public class cadprodutos extends javax.swing.JInternalFrame {
    private ArrayList<Produto> listaProdutos; // Lista para armazenar os produtos
    
    /**
     * Creates new form cadprodutos
     */
       public cadprodutos(ArrayList<Produto> listaProdutos) {
        initComponents();
        this.listaProdutos = listaProdutos;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldCodigo = new javax.swing.JTextField();
        jTextFieldQuantidade = new javax.swing.JTextField();
        jTextFieldPreco = new javax.swing.JTextField();
        jTextFieldNome = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        Cancelar = new javax.swing.JButton();
        cadastrar = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createTitledBorder("Cadastrar Produtos"));
        setClosable(true);

        jLabel1.setText("Código");

        jLabel2.setText("Quantidade");

        jLabel3.setText("Preço");

        jTextFieldCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCodigoActionPerformed(evt);
            }
        });

        jTextFieldPreco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPrecoActionPerformed(evt);
            }
        });

        jLabel4.setText("Nome do Produto");

        Cancelar.setText("Cancelar");

        cadastrar.setText("Cadastrar");
        cadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldNome)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jTextFieldCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jTextFieldQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(38, 38, 38)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldPreco, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Cancelar)
                .addGap(27, 27, 27)
                .addComponent(cadastrar)
                .addGap(19, 19, 19))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldPreco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Cancelar)
                    .addComponent(cadastrar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldCodigoActionPerformed

    private void cadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastrarActionPerformed
         try {
            // Obter e validar os dados dos campos
            String nome = jTextFieldNome.getText().trim();
            String codigo = jTextFieldCodigo.getText().trim();
            String quantidadeTexto = jTextFieldQuantidade.getText().trim();
            String precoTexto = jTextFieldPreco.getText().trim();

            // Validar campos obrigatórios
            if (nome.isEmpty() || codigo.isEmpty() || quantidadeTexto.isEmpty() || precoTexto.isEmpty()) {
                JOptionPane.showMessageDialog(this, 
                    "Preencha todos os campos obrigatórios!", 
                    "Aviso", 
                    JOptionPane.WARNING_MESSAGE);
                return;
            }

            // Converter quantidade
            int quantidade;
            try {
                quantidade = Integer.parseInt(quantidadeTexto);
                if (quantidade < 0) {
                    JOptionPane.showMessageDialog(this, 
                        "A quantidade não pode ser negativa!", 
                        "Erro", 
                        JOptionPane.ERROR_MESSAGE);
                    return;
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, 
                    "Quantidade inválida! Digite um número inteiro.", 
                    "Erro", 
                    JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Converter preço
            double preco;
            try {
                preco = Double.parseDouble(precoTexto.replace(",", "."));
                if (preco < 0) {
                    JOptionPane.showMessageDialog(this, 
                        "O preço não pode ser negativo!", 
                        "Erro", 
                        JOptionPane.ERROR_MESSAGE);
                    return;
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, 
                    "Preço inválido! Use números com vírgula ou ponto decimal.", 
                    "Erro", 
                    JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Criar o novo produto
            int novoId = listaProdutos.size() + 1;
            Produto produto = new Produto(novoId, nome, codigo, quantidade, preco);

            // Adicionar ao banco de dados
            boolean cadastradoNoBanco = ProdutoDAO.cadastrarProduto(produto);
            
            if (!cadastradoNoBanco) {
                JOptionPane.showMessageDialog(this, 
                    "Erro ao cadastrar no banco de dados!", 
                    "Erro", 
                    JOptionPane.ERROR_MESSAGE);
                return;
            }
              
            
            
            // Adicionar à lista em memória
            listaProdutos.add(produto);

            // Mensagem de sucesso
            JOptionPane.showMessageDialog(this, 
                "Produto cadastrado com sucesso no SISHOTEL!\n" +
                "ID: " + novoId + "\n" +
                "Nome: " + nome + "\n" +
                "Código: " + codigo + "\n" +
                "Quantidade: " + quantidade + "\n" +
                "Preço: R$ " + String.format("%.2f", preco), 
                "Sucesso", 
                JOptionPane.INFORMATION_MESSAGE);

            // Limpar campos
            limparCampos();
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, 
                "Erro inesperado: " + e.getMessage(), 
                "Erro", 
                JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }

    private void limparCampos() {
        jTextFieldNome.setText("");
        jTextFieldCodigo.setText("");
        jTextFieldQuantidade.setText("");
        jTextFieldPreco.setText("");
        jTextFieldNome.requestFocus();
    
    }//GEN-LAST:event_cadastrarActionPerformed

    private void jTextFieldPrecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPrecoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldPrecoActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Cancelar;
    private javax.swing.JButton cadastrar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jTextFieldCodigo;
    private javax.swing.JTextField jTextFieldNome;
    private javax.swing.JTextField jTextFieldPreco;
    private javax.swing.JTextField jTextFieldQuantidade;
    // End of variables declaration//GEN-END:variables
}
